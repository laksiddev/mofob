//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://microsoft.practices.esb/", ConfigurationName = "MOF.BizTalkESB.Bundled.IProcessRequestResponse")]
    internal interface IProcessRequestResponse
    {
        
        // CODEGEN: Generating message contract since message SubmitRequestResponse requires protection.
        [System.ServiceModel.OperationContractAttribute(Action="SubmitRequestResponse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseResponse SubmitRequestResponse(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SubmitRequestResponse", ReplyAction="*")]
        System.IAsyncResult BeginSubmitRequestResponse(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest request, System.AsyncCallback callback, object asyncState);
        
        Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseResponse EndSubmitRequestResponse(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class Itinerary
    {
        
        private ItineraryBizTalkSegment bizTalkSegmentField;
        
        private ItineraryServiceInstance serviceInstanceField;
        
        private ItineraryServices[] servicesField;
        
        private ItineraryResolvers[] resolverGroupsField;
        
        private string uuidField;
        
        private string beginTimeField;
        
        private string completeTimeField;
        
        private string stateField;
        
        private bool isRequestResponseField;
        
        private bool isRequestResponseFieldSpecified;
        
        private int servicecountField;
        
        private bool servicecountFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public ItineraryBizTalkSegment BizTalkSegment
        {
            get
            {
                return this.bizTalkSegmentField;
            }
            set
            {
                this.bizTalkSegmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public ItineraryServiceInstance ServiceInstance
        {
            get
            {
                return this.serviceInstanceField;
            }
            set
            {
                this.serviceInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Services", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public ItineraryServices[] Services
        {
            get
            {
                return this.servicesField;
            }
            set
            {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Resolvers", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ItineraryResolvers[] ResolverGroups
        {
            get
            {
                return this.resolverGroupsField;
            }
            set
            {
                this.resolverGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string beginTime
        {
            get
            {
                return this.beginTimeField;
            }
            set
            {
                this.beginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string completeTime
        {
            get
            {
                return this.completeTimeField;
            }
            set
            {
                this.completeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isRequestResponse
        {
            get
            {
                return this.isRequestResponseField;
            }
            set
            {
                this.isRequestResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequestResponseSpecified
        {
            get
            {
                return this.isRequestResponseFieldSpecified;
            }
            set
            {
                this.isRequestResponseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int servicecount
        {
            get
            {
                return this.servicecountField;
            }
            set
            {
                this.servicecountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool servicecountSpecified
        {
            get
            {
                return this.servicecountFieldSpecified;
            }
            set
            {
                this.servicecountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryBizTalkSegment
    {
        
        private string interchangeIdField;
        
        private string epmRRCorrelationTokenField;
        
        private string receiveInstanceIdField;
        
        private string messageIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string interchangeId
        {
            get
            {
                return this.interchangeIdField;
            }
            set
            {
                this.interchangeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string epmRRCorrelationToken
        {
            get
            {
                return this.epmRRCorrelationTokenField;
            }
            set
            {
                this.epmRRCorrelationTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string receiveInstanceId
        {
            get
            {
                return this.receiveInstanceIdField;
            }
            set
            {
                this.receiveInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string messageId
        {
            get
            {
                return this.messageIdField;
            }
            set
            {
                this.messageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryServiceInstance
    {
        
        private string uuidField;
        
        private string nameField;
        
        private string typeField;
        
        private string stateField;
        
        private int positionField;
        
        private bool positionFieldSpecified;
        
        private bool isRequestResponseField;
        
        private bool isRequestResponseFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified
        {
            get
            {
                return this.positionFieldSpecified;
            }
            set
            {
                this.positionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isRequestResponse
        {
            get
            {
                return this.isRequestResponseField;
            }
            set
            {
                this.isRequestResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequestResponseSpecified
        {
            get
            {
                return this.isRequestResponseFieldSpecified;
            }
            set
            {
                this.isRequestResponseFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryServices
    {
        
        private ItineraryServicesService serviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public ItineraryServicesService Service
        {
            get
            {
                return this.serviceField;
            }
            set
            {
                this.serviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryServicesService
    {
        
        private string uuidField;
        
        private string beginTimeField;
        
        private string completeTimeField;
        
        private string nameField;
        
        private string typeField;
        
        private string stateField;
        
        private bool resolveField;
        
        private bool resolveFieldSpecified;
        
        private bool isRequestResponseField;
        
        private bool isRequestResponseFieldSpecified;
        
        private int positionField;
        
        private bool positionFieldSpecified;
        
        private string serviceInstanceIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string beginTime
        {
            get
            {
                return this.beginTimeField;
            }
            set
            {
                this.beginTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string completeTime
        {
            get
            {
                return this.completeTimeField;
            }
            set
            {
                this.completeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool resolve
        {
            get
            {
                return this.resolveField;
            }
            set
            {
                this.resolveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolveSpecified
        {
            get
            {
                return this.resolveFieldSpecified;
            }
            set
            {
                this.resolveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isRequestResponse
        {
            get
            {
                return this.isRequestResponseField;
            }
            set
            {
                this.isRequestResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequestResponseSpecified
        {
            get
            {
                return this.isRequestResponseFieldSpecified;
            }
            set
            {
                this.isRequestResponseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified
        {
            get
            {
                return this.positionFieldSpecified;
            }
            set
            {
                this.positionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string serviceInstanceId
        {
            get
            {
                return this.serviceInstanceIdField;
            }
            set
            {
                this.serviceInstanceIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.2152")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryResolvers
    {
        
        private string serviceIdField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string serviceId
        {
            get
            {
                return this.serviceIdField;
            }
            set
            {
                this.serviceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false, ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign)]
    internal partial class SubmitRequestResponseRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary", ProtectionLevel=System.Net.Security.ProtectionLevel.None)]
        public Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary Itinerary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Order=0)]
        public object part;
        
        public SubmitRequestResponseRequest()
        {
        }
        
        public SubmitRequestResponseRequest(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary Itinerary, object part)
        {
            this.Itinerary = Itinerary;
            this.part = part;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false, ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign)]
    internal partial class SubmitRequestResponseResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Order=0)]
        public object part;
        
        public SubmitRequestResponseResponse()
        {
        }
        
        public SubmitRequestResponseResponse(object part)
        {
            this.part = part;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    internal interface ProcessRequestResponseChannel : Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    internal partial class SubmitRequestResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SubmitRequestResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public object Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    internal partial class ProcessRequestResponseClient : System.ServiceModel.ClientBase<Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse>, Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse
    {
        
        private BeginOperationDelegate onBeginSubmitRequestResponseDelegate;
        
        private EndOperationDelegate onEndSubmitRequestResponseDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitRequestResponseCompletedDelegate;
        
        public ProcessRequestResponseClient()
        {
        }
        
        public ProcessRequestResponseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ProcessRequestResponseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ProcessRequestResponseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ProcessRequestResponseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public event System.EventHandler<SubmitRequestResponseCompletedEventArgs> SubmitRequestResponseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseResponse Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse.SubmitRequestResponse(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest request)
        {
            return base.Channel.SubmitRequestResponse(request);
        }
        
        public void SubmitRequestResponse(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary Itinerary, ref object part)
        {
            Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest inValue = new Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest();
            inValue.Itinerary = Itinerary;
            inValue.part = part;
            Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseResponse retVal = ((Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse)(this)).SubmitRequestResponse(inValue);
            part = retVal.part;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse.BeginSubmitRequestResponse(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSubmitRequestResponse(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitRequestResponse(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary Itinerary, object part, System.AsyncCallback callback, object asyncState)
        {
            Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest inValue = new Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseRequest();
            inValue.Itinerary = Itinerary;
            inValue.part = part;
            return ((Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse)(this)).BeginSubmitRequestResponse(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseResponse Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse.EndSubmitRequestResponse(System.IAsyncResult result)
        {
            return base.Channel.EndSubmitRequestResponse(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public object EndSubmitRequestResponse(System.IAsyncResult result)
        {
            Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.SubmitRequestResponseResponse retVal = ((Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.IProcessRequestResponse)(this)).EndSubmitRequestResponse(result);
            return retVal.part;
        }
        
        private System.IAsyncResult OnBeginSubmitRequestResponse(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary Itinerary = ((Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary)(inValues[0]));
            object part = ((object)(inValues[1]));
            return this.BeginSubmitRequestResponse(Itinerary, part, callback, asyncState);
        }
        
        private object[] OnEndSubmitRequestResponse(System.IAsyncResult result)
        {
            object retVal = this.EndSubmitRequestResponse(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitRequestResponseCompleted(object state)
        {
            if ((this.SubmitRequestResponseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitRequestResponseCompleted(this, new SubmitRequestResponseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitRequestResponseAsync(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary Itinerary, object part)
        {
            this.SubmitRequestResponseAsync(Itinerary, part, null);
        }
        
        public void SubmitRequestResponseAsync(Open.MOF.BizTalk.Adapters.Proxy.ItineraryTwoWayBundledServiceInstance.Itinerary Itinerary, object part, object userState)
        {
            if ((this.onBeginSubmitRequestResponseDelegate == null))
            {
                this.onBeginSubmitRequestResponseDelegate = new BeginOperationDelegate(this.OnBeginSubmitRequestResponse);
            }
            if ((this.onEndSubmitRequestResponseDelegate == null))
            {
                this.onEndSubmitRequestResponseDelegate = new EndOperationDelegate(this.OnEndSubmitRequestResponse);
            }
            if ((this.onSubmitRequestResponseCompletedDelegate == null))
            {
                this.onSubmitRequestResponseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitRequestResponseCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitRequestResponseDelegate, new object[] {
                        Itinerary,
                        part}, this.onEndSubmitRequestResponseDelegate, this.onSubmitRequestResponseCompletedDelegate, userState);
        }
    }
}
