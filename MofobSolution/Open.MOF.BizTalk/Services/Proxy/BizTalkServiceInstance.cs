//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Open.MOF.BizTalk.Services.Proxy
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://Microsoft.BizTalk.ESB/", ConfigurationName = "ProcessRequest")]
    public interface ProcessRequest
    {

        // CODEGEN: Generating message contract since message SubmitRequest requires protection.
        [System.ServiceModel.OperationContractAttribute(Action = "SubmitRequest", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SubmitRequestResponse SubmitRequest(SubmitRequestRequest request);
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://Microsoft.BizTalk.ESB/", ConfigurationName = "ProcessRequestOneWay")]
    public interface ProcessRequestOneWay
    {

        // CODEGEN: Generating message contract since message SubmitRequest requires protection.
        [System.ServiceModel.OperationContractAttribute(Action = "SubmitRequest", IsOneWay = true)]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void SubmitRequest(SubmitRequestRequestOneWay request);
    }

    //This is added from the two way service as the same schema is used....[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://microsoft.practices.esb/", ConfigurationName = "ProcessRequestResponse")]
    public interface ProcessRequestResponse
    {

        // CODEGEN: Generating message contract since message SubmitRequestResponse requires protection.
        [System.ServiceModel.OperationContractAttribute(Action = "SubmitRequestResponse", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SubmitRequestResponseResponse SubmitRequestResponse(SubmitRequestResponseRequest request);
    }
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.30")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class Itinerary
    {

        private ItineraryBizTalkSegment bizTalkSegmentField;

        private ItineraryServiceInstance serviceInstanceField;

        private ItineraryServices[] servicesField;

        private ItineraryResolvers[] resolverGroupsField;

        private string uuidField;

        private string beginTimeField;

        private string completeTimeField;

        private string stateField;

        private bool isRequestResponseField;

        private bool isRequestResponseFieldSpecified;

        private string servicecountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public ItineraryBizTalkSegment BizTalkSegment
        {
            get
            {
                return this.bizTalkSegmentField;
            }
            set
            {
                this.bizTalkSegmentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public ItineraryServiceInstance ServiceInstance
        {
            get
            {
                return this.serviceInstanceField;
            }
            set
            {
                this.serviceInstanceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Services", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public ItineraryServices[] Services
        {
            get
            {
                return this.servicesField;
            }
            set
            {
                this.servicesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Resolvers", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ItineraryResolvers[] ResolverGroups
        {
            get
            {
                return this.resolverGroupsField;
            }
            set
            {
                this.resolverGroupsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string beginTime
        {
            get
            {
                return this.beginTimeField;
            }
            set
            {
                this.beginTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string completeTime
        {
            get
            {
                return this.completeTimeField;
            }
            set
            {
                this.completeTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isRequestResponse
        {
            get
            {
                return this.isRequestResponseField;
            }
            set
            {
                this.isRequestResponseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequestResponseSpecified
        {
            get
            {
                return this.isRequestResponseFieldSpecified;
            }
            set
            {
                this.isRequestResponseFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string servicecount
        {
            get
            {
                return this.servicecountField;
            }
            set
            {
                this.servicecountField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.30")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryBizTalkSegment
    {

        private string interchangeIdField;

        private string epmRRCorrelationTokenField;

        private string receiveInstanceIdField;

        private string messageIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string interchangeId
        {
            get
            {
                return this.interchangeIdField;
            }
            set
            {
                this.interchangeIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string epmRRCorrelationToken
        {
            get
            {
                return this.epmRRCorrelationTokenField;
            }
            set
            {
                this.epmRRCorrelationTokenField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string receiveInstanceId
        {
            get
            {
                return this.receiveInstanceIdField;
            }
            set
            {
                this.receiveInstanceIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string messageId
        {
            get
            {
                return this.messageIdField;
            }
            set
            {
                this.messageIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.30")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryServiceInstance
    {

        private string uuidField;

        private string nameField;

        private string typeField;

        private string stateField;

        private int positionField;

        private bool positionFieldSpecified;

        private bool isRequestResponseField;

        private bool isRequestResponseFieldSpecified;

        private Stages stageField;

        private bool stageFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified
        {
            get
            {
                return this.positionFieldSpecified;
            }
            set
            {
                this.positionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isRequestResponse
        {
            get
            {
                return this.isRequestResponseField;
            }
            set
            {
                this.isRequestResponseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequestResponseSpecified
        {
            get
            {
                return this.isRequestResponseFieldSpecified;
            }
            set
            {
                this.isRequestResponseFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Stages stage
        {
            get
            {
                return this.stageField;
            }
            set
            {
                this.stageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stageSpecified
        {
            get
            {
                return this.stageFieldSpecified;
            }
            set
            {
                this.stageFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.30")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryServices
    {

        private ItineraryServicesService serviceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public ItineraryServicesService Service
        {
            get
            {
                return this.serviceField;
            }
            set
            {
                this.serviceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.30")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryServicesService
    {

        private string uuidField;

        private string beginTimeField;

        private string completeTimeField;

        private string nameField;

        private string typeField;

        private string stateField;

        private bool resolveField;

        private bool resolveFieldSpecified;

        private bool isRequestResponseField;

        private bool isRequestResponseFieldSpecified;

        private int positionField;

        private bool positionFieldSpecified;

        private string serviceInstanceIdField;

        private bool isTrackingEnabledField;

        private bool isTrackingEnabledFieldSpecified;

        private Stages stageField;

        private bool stageFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string beginTime
        {
            get
            {
                return this.beginTimeField;
            }
            set
            {
                this.beginTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string completeTime
        {
            get
            {
                return this.completeTimeField;
            }
            set
            {
                this.completeTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool resolve
        {
            get
            {
                return this.resolveField;
            }
            set
            {
                this.resolveField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolveSpecified
        {
            get
            {
                return this.resolveFieldSpecified;
            }
            set
            {
                this.resolveFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isRequestResponse
        {
            get
            {
                return this.isRequestResponseField;
            }
            set
            {
                this.isRequestResponseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequestResponseSpecified
        {
            get
            {
                return this.isRequestResponseFieldSpecified;
            }
            set
            {
                this.isRequestResponseFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified
        {
            get
            {
                return this.positionFieldSpecified;
            }
            set
            {
                this.positionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string serviceInstanceId
        {
            get
            {
                return this.serviceInstanceIdField;
            }
            set
            {
                this.serviceInstanceIdField = value;
            }
        }



        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isTrackingEnabled
        {
            get
            {
                return this.isTrackingEnabledField;
            }
            set
            {
                this.isTrackingEnabledField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isTrackingEnabledSpecified
        {
            get
            {
                return this.isTrackingEnabledFieldSpecified;
            }
            set
            {
                this.isTrackingEnabledFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Stages stage
        {
            get
            {
                return this.stageField;
            }
            set
            {
                this.stageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stageSpecified
        {
            get
            {
                return this.stageFieldSpecified;
            }
            set
            {
                this.stageFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public enum Stages
    {

        /// <remarks/>
        notSpecified,

        /// <remarks/>
        receiveInbound,

        /// <remarks/>
        receiveTransmit,

        /// <remarks/>
        sendTransmit,

        /// <remarks/>
        sendInbound,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "3.0.4506.30")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
    public partial class ItineraryResolvers
    {

        private string serviceIdField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string serviceId
        {
            get
            {
                return this.serviceIdField;
            }
            set
            {
                this.serviceIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false, ProtectionLevel = System.Net.Security.ProtectionLevel.EncryptAndSign)]
    public partial class SubmitRequestRequest
    {

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary", ProtectionLevel = System.Net.Security.ProtectionLevel.None)]
        public Itinerary Itinerary;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "", ProtectionLevel = System.Net.Security.ProtectionLevel.EncryptAndSign, Order = 0)]
        public object part;

        public SubmitRequestRequest()
        {
        }

        public SubmitRequestRequest(Itinerary Itinerary, object part)
        {
            this.Itinerary = Itinerary;
            this.part = part;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    //[System.ServiceModel.MessageContractAttribute(IsWrapped = false, ProtectionLevel = System.Net.Security.ProtectionLevel.EncryptAndSign)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false, ProtectionLevel = System.Net.Security.ProtectionLevel.None)]
    public partial class SubmitRequestRequestOneWay
    {

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary", ProtectionLevel = System.Net.Security.ProtectionLevel.None)]
        public Itinerary Itinerary;

        //[System.ServiceModel.MessageBodyMemberAttribute(Namespace = "", ProtectionLevel = System.Net.Security.ProtectionLevel.EncryptAndSign, Order = 0)]
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "", ProtectionLevel = System.Net.Security.ProtectionLevel.None, Order = 0)]
        public object part;

        public SubmitRequestRequestOneWay()
        {
        }

        public SubmitRequestRequestOneWay(Itinerary Itinerary, object part)
        {
            this.Itinerary = Itinerary;
            this.part = part;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false, ProtectionLevel = System.Net.Security.ProtectionLevel.EncryptAndSign)]
    public partial class SubmitRequestResponse
    {

        public SubmitRequestResponse()
        {
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ProcessRequestChannel : ProcessRequest, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessRequestClient : System.ServiceModel.ClientBase<ProcessRequest>, ProcessRequest
    {

        public ProcessRequestClient()
        {
        }

        public ProcessRequestClient(string endpointConfigurationName)
            :
                base(endpointConfigurationName)
        {
        }

        public ProcessRequestClient(string endpointConfigurationName, string remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessRequestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessRequestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(binding, remoteAddress)
        {
        }

        SubmitRequestResponse ProcessRequest.SubmitRequest(SubmitRequestRequest request)
        {
            return base.Channel.SubmitRequest(request);
        }

        public void SubmitRequest(Itinerary Itinerary, object part)
        {
            SubmitRequestRequest inValue = new SubmitRequestRequest();
            inValue.Itinerary = Itinerary;
            inValue.part = part;
            SubmitRequestResponse retVal = ((ProcessRequest)(this)).SubmitRequest(inValue);
        }
    }
    //This is added from the two way service as the same schema is used....


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ProcessRequestOneWayChannel : ProcessRequestOneWay, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessRequestOneWayClient : System.ServiceModel.ClientBase<ProcessRequestOneWay>, ProcessRequestOneWay
    {

        public ProcessRequestOneWayClient()
        {
        }

        public ProcessRequestOneWayClient(string endpointConfigurationName)
            :
                base(endpointConfigurationName)
        {
        }

        public ProcessRequestOneWayClient(string endpointConfigurationName, string remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessRequestOneWayClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessRequestOneWayClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(binding, remoteAddress)
        {
        }

        void ProcessRequestOneWay.SubmitRequest(SubmitRequestRequestOneWay request)
        {
            base.Channel.SubmitRequest(request);
        }

        public void SubmitRequest(Itinerary Itinerary, object part)
        {
            SubmitRequestRequestOneWay inValue = new SubmitRequestRequestOneWay();
            inValue.Itinerary = Itinerary;
            inValue.part = part;
            ((ProcessRequestOneWay)(this)).SubmitRequest(inValue);
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class SubmitRequestResponseRequest
    {

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.microsoft.biztalk.practices.esb.com/itinerary")]
        public Itinerary Itinerary;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "", Order = 0)]
        public object part;

        public SubmitRequestResponseRequest()
        {
        }

        public SubmitRequestResponseRequest(Itinerary Itinerary, object part)
        {
            this.Itinerary = Itinerary;
            this.part = part;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class SubmitRequestResponseResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "", Order = 0)]
        public object part;

        public SubmitRequestResponseResponse()
        {
        }

        public SubmitRequestResponseResponse(object part)
        {
            this.part = part;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ProcessRequestResponseChannel : ProcessRequestResponse, System.ServiceModel.IClientChannel
    {
    }

    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessRequestResponseClient : System.ServiceModel.ClientBase<ProcessRequestResponse>, ProcessRequestResponse
    {

        public ProcessRequestResponseClient()
        {
        }

        public ProcessRequestResponseClient(string endpointConfigurationName)
            :
                base(endpointConfigurationName)
        {
        }

        public ProcessRequestResponseClient(string endpointConfigurationName, string remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessRequestResponseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProcessRequestResponseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(binding, remoteAddress)
        {
        }

        SubmitRequestResponseResponse ProcessRequestResponse.SubmitRequestResponse(SubmitRequestResponseRequest request)
        {
            return base.Channel.SubmitRequestResponse(request);
        }

        public void SubmitRequestResponse(Itinerary Itinerary, ref object part)
        {
            SubmitRequestResponseRequest inValue = new SubmitRequestResponseRequest();
            inValue.Itinerary = Itinerary;
            inValue.part = part;
            SubmitRequestResponseResponse retVal = ((ProcessRequestResponse)(this)).SubmitRequestResponse(inValue);
            part = retVal.part;
        }
    }
}